@inject AppState AppState

<div class="simple-form">
    <div style="margin-bottom:20px;">
        Mode:
        <select  @bind="X2XMode">
            <option value=@((int)enmX2XMode.None)>None</option>
            <option value=@((int)enmX2XMode.CopyTagWithAttribs)>Copy tag with attributes</option>
            <option value=@((int)enmX2XMode.CopyTagWithNewAttribs)>Copy tag with new attribute</option>
        </select>
    </div>

    <div class="form-group">
        <label for="Tag">Tag Name</label>
        <input @bind="Tag" type="text" class="form-control" id="tag" placeholder="Tag to work on" />
    </div>
    <div class="form-group">
        <label for="Attribute">Attribute Name</label>
        <input @bind="Attribute" type="text" class="form-control" id="attribute" placeholder="Attribute to work on" />
    </div>

    <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    string Tag { get; set; }
    string Attribute { get; set; }
    int X2XMode { get; set; }

    protected override void OnInitialized()
    {
        //BlazoredModal.SetTitle("Enter a Message");
        Tag = AppState.tagName;
        Attribute = AppState.attribName;
        X2XMode = (int)AppState.X2XMode;
    }

    async Task SubmitForm()
    {
        AppState.tagName = Tag;
        AppState.attribName = Attribute;
        AppState.X2XMode =(enmX2XMode) X2XMode;
        //        await BlazoredModal.CloseAsync(ModalResult.Ok(Tag));
        await BlazoredModal.CloseAsync();
    }

    async Task Cancel() => await BlazoredModal.CancelAsync();

    private void ChangeMode(ChangeEventArgs e)
    {
        Console.WriteLine($"setting theme to: {e.Value.ToString()}");
        switch (e.Value.ToString())
        {
            case "0":
                AppState.X2XMode = enmX2XMode.None;
                break;
            case "1":
                AppState.X2XMode = enmX2XMode.CopyTagWithAttribs;
                break;
            case "2":
                AppState.X2XMode = enmX2XMode.CopyTagWithNewAttribs;
                break;
        }

    }
}
